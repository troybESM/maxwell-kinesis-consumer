service: maxwell-kinesis-consumer-access-tokens

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, 'prod'}
  timeout: 120
  logRetentionInDays: 7
  versionFunctions: false
  region: ${self:custom.configFile.region}
  deploymentBucket:
    name: hsl-${opt:stage}-serverless
  iamRoleStatements: ${file(./config/iamRoles.yml)}
  vpc:
    securityGroupIds: ${self:custom.vpcSecurityGroups.${self:provider.stage}}
    subnetIds: ${self:custom.vpcSubnetIds.${self:provider.stage}}
  environment:
    LOG_LEVEL: INFO
    CLUSTER_NAME: 'pnw-dev'

resources: ${file(./config/resources.yml)}
custom:
  configFile: ${file(./config/${self:provider.stage}.yml)}
  pythonRequirements:
    dockerPip: non-linux
  vpcSecurityGroups:
    dev: sg-48944132
    prod: sg-d2dcc5b7
  vpcSubnetIds:
    dev:
      - subnet-afd4f8e6
      - subnet-41392c26
      - subnet-71dc742a
    prod: 
      - subnet-e095b5a6
      - subnet-31a12b59
      - subnet-86e7f8ee
plugins:
  - serverless-python-requirements
  - serverless-deployment-bucket
package:
  exclude:
    - .venv/**
    - config/**
    - node_modules/**    
    - sql/**
    - README.md
    - .gitignore
    - .idea/**
    - .vscode/**
    - .serverless
    - serverless.yml
    - .git/**
    - test/**
    - poetry.lock
    - poetry.toml
    - pyproject.toml
    - requirements.txt
  include:
    - src/handlers/**

functions:
  maxwell_kinesis_handler:
    name: maxwell_kinesis_handler
    handler: src/handlers/maxwell_kinesis_mysql.handle_event
    memorySize: 2048
    timeout: 600
    events:
      - stream:
          batchSize: 1000
          startingPosition: LATEST
          parallelizationFactor: 10
          maximumRetryAttempts: 100
          type: kinesis
          arn: !GetAtt MaxwellStream.Arn
